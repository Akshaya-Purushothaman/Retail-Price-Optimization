import pandas as pd
import plotly.express as px
from google.colab import files

# Step 1: Specify the file path of the CSV file
file_path = 'retail_price.csv'  # Replace with your actual file path

# Step 2: Load the DataFrame from the specified CSV file path
df = pd.read_csv(file_path)

# Check if the DataFrame is loaded and has data
if df.empty:
    print("The DataFrame is empty. Please check the CSV file.")
else:
    # Check if the necessary columns exist in the DataFrame
    if 'qty' in df.columns and 'total_price' in df.columns:
        # Step 3: Create the scatter plot using Plotly with custom design elements
        fig = px.scatter(df,
                         x='qty',
                         y='total_price',
                         trendline='ols',  # Adding a trendline using OLS
                         title='Total Price vs Quantity',
                         labels={'qty': 'Quantity', 'total_price': 'Total Price'})

        # Customize the scatter points to a darker shade of blue for visibility
        fig.update_traces(marker=dict(color='#003366', size=10),  # Dark blue points
                          selector=dict(mode='markers'))

        # Set the trendline color to a contrasting bright color like dark orange
        fig.update_traces(line=dict(color='#FF6600', width=3),  # Dark orange trendline
                          selector=dict(mode='lines'))

        # Update the layout background to a lighter shade of blue for a professional look
        fig.update_layout(
            title_font=dict(size=24, color='#333333'),  # Dark gray title
            paper_bgcolor='#E6F0FA',  # Light blue background
            plot_bgcolor='#F2F6FC',   # Slightly darker blue plot area background
            font=dict(color='#333333'),  # Dark gray font for readability
            xaxis=dict(
                title_font=dict(size=18, color='#333333'),
                tickfont=dict(color='#333333'),
                showgrid=True,  # Add gridlines
                gridcolor='#CCCCCC',  # Light gray gridlines
                zerolinecolor='#AAAAAA'  # Light gray zero line
            ),
            yaxis=dict(
                title_font=dict(size=18, color='#333333'),
                tickfont=dict(color='#333333'),
                showgrid=True,
                gridcolor='#CCCCCC',
                zerolinecolor='#AAAAAA'
            ),
            margin=dict(l=40, r=40, t=80, b=40),
        )

        # Step 4: Show the plot
        fig.show()

        # Optional: Save the figure as HTML
        fig.write_html('scatter_total_price_vs_qty.html')

        # Step 5: Download the HTML file
        files.download('scatter_total_price_vs_qty.html')
    else:
        print("Necessary columns 'qty' or 'total_price' do not exist in the DataFrame.")
